@page "/mantenimientos/editar/{mantenimientoId:int}"
@inject NavigationManager navigationManager
@inject IHttpServicio http

<div class="position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center bg-dark bg-opacity-50" style="z-index: 1050;">
    <div class="bg-white rounded-3 shadow p-4" style="width: 100%; max-width: 500px; position: relative;">

        <!-- Botón de cerrar (X) -->
        <button type="button" class="btn-close position-absolute top-0 end-0 m-3" aria-label="Cerrar" @onclick="Cancelar"></button>

        <!-- Título -->
        <h5 class="fw-semibold mb-1">Nuevo Mantenimiento</h5>
        <p class="text-muted mb-4">Completa la información del mantenimiento</p>

        <EditForm Model="mantenimiento" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Información Básica -->
            <h6 class="fw-bold">Información Básica</h6>

            <div class="mb-3">
                <label class="form-label">Nombre del Mantenimiento</label>
                <InputText class="form-control" @bind-Value="mantenimiento.Nombre" />
            </div>

            <div class="mb-3">
                <label class="form-label">Descripción</label>
                <InputText class="form-control" placeholder="Describe el mantenimiento..." @bind-Value="mantenimiento.Descripcion" />
            </div>

            <!-- Detalles del Mantenimiento -->
            <h6 class="fw-bold">Detalles</h6>

            <div class="mb-3">
                <label class="form-label">Frecuencia (en días)</label>
                <InputNumber class="form-control" @bind-Value="mantenimiento.Frecuencia" />
            </div>

            <div class="form-check mb-2">
                <InputCheckbox class="form-check-input" @bind-Value="mantenimiento.Estado" id="estadoCheck" />
                <label class="form-check-label" for="estadoCheck">
                    ¿Está al día?
                </label>
            </div>

            <div class="form-check mb-4">
                <InputCheckbox class="form-check-input" @bind-Value="mantenimiento.Insumo" id="insumoCheck" />
                <label class="form-check-label" for="insumoCheck">
                    ¿Requiere insumo?
                </label>
            </div>

            <!-- Botones -->
            <div class="d-flex justify-content-end border-top pt-3 gap-2">
                <button type="button" class="btn btn-light" @onclick="Cancelar">Cancelar</button>
                <button type="submit" class="btn btn-primary d-flex align-items-center gap-1">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16">
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0" />
                    </svg> Guardar Mantenimiento
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    Mantenimiento mantenimiento = new Mantenimiento();
    [Parameter] public int mantenimientoId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }
    private async Task Mostrar()
    {
        var respuesta = await http.Get<Mantenimiento>($"api/Mantenimiento/{mantenimientoId}");

        if (!respuesta.Error)
        {
            mantenimiento = respuesta.Respuesta;
        }
        // else
        // {
        //     navigationManager.NavigateTo("/productos");
        // }
    }

    private async Task Grabar()
    {
        var HttpRespuesta = await http.Put<Mantenimiento>($"api/Mantenimiento/{mantenimientoId}", mantenimiento);
        if (HttpRespuesta.Error)
        {
            var Body = HttpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/mantenimientos");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/mantenimientos");
    }

}