@page "/usuarios"
@inject IHttpServicio http

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="fw-bold m-0">Gestión de Usuarios</h3>
    <a class="btn btn-primary" href="/registrar">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
        </svg> Nuevo usuario
    </a>
</div>
<table class="table table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Email</th>
            <th>Telefono</th>
            <th>Rol</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>

        @if (listaUsuarios == null)
        {
            <p>Buscando usuarios ...</p>
        }
        else if (listaUsuarios.Count == 0)
        {
            <p>No se encontraron usuarios cargados.</p>
        }
        @foreach (var item in listaUsuarios)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Nombre @item.Apellido</td>
                <td>@item.Email</td>
                <td>@item.Telefono</td>
                <td>@item.Rol</td>
                <td>
                    <a class="btn btn-primary" href="/usuarios/rol/@item.Id">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                        </svg> Asignar rol
                    </a>
                </td>
            </tr>
        }

    </tbody>

</table>

@code {
    List<UserListadoDTO> listaUsuarios = new();
    UserListadoDTO usuario;
    string mensaje;
    UserListadoDTO? UsuarioBorrar = null;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<UserListadoDTO>>("usuarios/Admin");
        if (!resp.Error)
        {
            listaUsuarios = resp.Respuesta;
        }
        else
        {
            mensaje = await resp.ObtenerError();
        }

    }

    private async Task Eliminar(UserListadoDTO userListadoDTO)
    {
        UsuarioBorrar = userListadoDTO;
    }

    private void Cancelar()
    {
        UsuarioBorrar = null;
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/usuarios/{UsuarioBorrar.Id}");
        if (respuesta.Error)
        {
            mensaje = "No se pudo eliminar el usuario.";
        }

        Cancelar();
        await Leer();
    }
}
